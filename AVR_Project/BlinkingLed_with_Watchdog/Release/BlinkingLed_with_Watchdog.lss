
BlinkingLed_with_Watchdog.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  0000012a  000001be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  000001be  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f0  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000824  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000001a  00000000  00000000  00000dc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000de0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a5 30       	cpi	r26, 0x05	; 5
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
  90:	14 b8       	out	0x04, r1	; 4
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	08 95       	ret

00000098 <GPIO_Init>:
  98:	20 9a       	sbi	0x04, 0	; 4
  9a:	08 95       	ret

0000009c <GPIO_Write>:
  9c:	21 e0       	ldi	r18, 0x01	; 1
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	a9 01       	movw	r20, r18
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <GPIO_Write+0xc>
  a4:	44 0f       	add	r20, r20
  a6:	55 1f       	adc	r21, r21
  a8:	8a 95       	dec	r24
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <GPIO_Write+0x8>
  ac:	ca 01       	movw	r24, r20
  ae:	95 b1       	in	r25, 0x05	; 5
  b0:	61 30       	cpi	r22, 0x01	; 1
  b2:	19 f4       	brne	.+6      	; 0xba <GPIO_Write+0x1e>
  b4:	89 2b       	or	r24, r25
  b6:	85 b9       	out	0x05, r24	; 5
  b8:	08 95       	ret
  ba:	80 95       	com	r24
  bc:	89 23       	and	r24, r25
  be:	fb cf       	rjmp	.-10     	; 0xb6 <GPIO_Write+0x1a>

000000c0 <LEDM_Init>:
  c0:	0e 94 4c 00 	call	0x98	; 0x98 <GPIO_Init>
  c4:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	0c 94 4e 00 	jmp	0x9c	; 0x9c <GPIO_Write>

000000ce <LEDM_Manage>:
  ce:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <elapsedTime>
  d2:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <elapsedTime+0x1>
  d6:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <elapsedTime+0x2>
  da:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <elapsedTime+0x3>
  de:	0a 96       	adiw	r24, 0x0a	; 10
  e0:	a1 1d       	adc	r26, r1
  e2:	b1 1d       	adc	r27, r1
  e4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <elapsedTime>
  e8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <elapsedTime+0x1>
  ec:	a0 93 03 01 	sts	0x0103, r26	; 0x800103 <elapsedTime+0x2>
  f0:	b0 93 04 01 	sts	0x0104, r27	; 0x800104 <elapsedTime+0x3>
  f4:	84 3f       	cpi	r24, 0xF4	; 244
  f6:	91 40       	sbci	r25, 0x01	; 1
  f8:	a1 05       	cpc	r26, r1
  fa:	b1 05       	cpc	r27, r1
  fc:	98 f0       	brcs	.+38     	; 0x124 <LEDM_Manage+0x56>
  fe:	61 e0       	ldi	r22, 0x01	; 1
 100:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	09 f4       	brne	.+2      	; 0x10a <LEDM_Manage+0x3c>
 108:	60 e0       	ldi	r22, 0x00	; 0
 10a:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_Write>
 114:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <elapsedTime>
 118:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <elapsedTime+0x1>
 11c:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <elapsedTime+0x2>
 120:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <elapsedTime+0x3>
 124:	08 95       	ret

00000126 <_exit>:
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>
